[tool.poetry]
name = "pyro"
version = "0.1.0"
description = ""
authors = ["jainal09 <jainal09gosaliya@gmail.com>"]
readme = "README.md"
packages = [{ include = "src/pyro" }]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.101.1"
uvicorn = "^0.23.2"
unstructured = { extras = ["pdf"], version = "^0.10.5" }
weaviate-client = "^3.23.0"
langchain = "^0.0.312"
openai = "^0.27.9"
httpx = "^0.24.1"
pytest = "^7.4.0"
pyyaml = "^6.0.1"
streamlit = "^1.36.0"
requests = "^2.32.3"
markdown = "^3.6"


[tool.poetry.group.dev.dependencies]
ruff = "^0.3.5"



[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "src/grpc_generated",
]

src = ["src"]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I001",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
  "A",  # autoflake
]
ignore = [
    "E501",  # line too long, handled by black]
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
